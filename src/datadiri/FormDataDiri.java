/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package datadiri;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import static java.time.Instant.now;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import koneksi.Koneksi;
import login.FormLogin;
import mainmenu.FormMenu;

/**
 *
 * @author afri
 */
public class FormDataDiri extends javax.swing.JFrame {

    /**
     * Creates new form FormDataDiri
     */
    Statement st;
    ResultSet rs;
   // public PreparedStatment ps;
    BufferedImage bImage;
    Connection con = Koneksi.getKoneksi();
    String MySQL = "SELECT * FROM datadiri";
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String JK,SP;
    String inputDate;
    
    
    private final int IMG_WIDTH=183;
    private final int IMG_HEIGHT=224;
    
    public FormDataDiri() {
        initComponents();
        this.setLocationRelativeTo(null);
        setData(MySQL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gJK = new javax.swing.ButtonGroup();
        gSP = new javax.swing.ButtonGroup();
        fChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtTL = new javax.swing.JTextField();
        dpTL = new org.jdesktop.swingx.JXDatePicker();
        txtAlamat = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rbP = new javax.swing.JRadioButton();
        rbL = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        cbAgama = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        rbBM = new javax.swing.JRadioButton();
        rbM = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelDataDiri = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        btnKembali = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbGambar = new javax.swing.JLabel();
        btnPilih = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 0));

        jPanel1.setBackground(new java.awt.Color(153, 255, 102));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("ID");

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Nama");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Tempat Lahir");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Tanggal Lahir");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        txtAlamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlamatActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Alamat");

        gJK.add(rbP);
        rbP.setText("Perempuan");

        gJK.add(rbL);
        rbL.setText("Laki - Laki");
        rbL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Jenis Kelamin");

        cbAgama.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbAgama.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Pilih--", "Buddha", "Hindu", "Islam", "Kristen", "Katholik", "Kong Hu Chu", " " }));
        cbAgama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAgamaActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Agama");

        gSP.add(rbBM);
        rbBM.setText("Belum Menikah");
        rbBM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbBMActionPerformed(evt);
            }
        });

        gSP.add(rbM);
        rbM.setText("Menikah");
        rbM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Status Perkawinan");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpTL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtId)
                    .addComponent(txtNama)
                    .addComponent(txtTL)
                    .addComponent(txtAlamat)
                    .addComponent(cbAgama, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbM)
                                .addGap(36, 36, 36)
                                .addComponent(rbBM))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbL)
                                .addGap(30, 30, 30)
                                .addComponent(rbP, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 223, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dpTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbL, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbP, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(cbAgama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(rbM, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbBM, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane6.setBackground(new java.awt.Color(0, 255, 255));

        tabelDataDiri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelDataDiri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataDiriMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tabelDataDiri);

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnKembali.setText("Keluar");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        btnPilih.setText("Pilih");
        btnPilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(btnPilih, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(lbGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbGambar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnPilih)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("FORM DATA DIRI");

        jPanel4.setBackground(new java.awt.Color(153, 255, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pencarian", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));
        jPanel4.add(txtCari);

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        jPanel4.add(btnCari);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addGap(18, 18, 18)
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(jLabel7)))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSimpan)
                        .addComponent(btnUbah)
                        .addComponent(btnHapus)
                        .addComponent(btnKembali)))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1003, 707));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generateID(){
    String idDate = null;
    Date now = new Date();
    SimpleDateFormat df = new SimpleDateFormat("sshhddmmyy");
    idDate = df.format(now);
    String phrase = txtNama.getText();
    txtId.setText(phrase.substring(0,2)+idDate);
    }
    
    private Date getFormattedDate(String tanggal){
        try{
            Date tanggalLahir = dateFormat.parse(tanggal);
            return tanggalLahir;
        } catch (ParseException ex){
            System.err.println("Error Tanggal : "+ex);
            return new Date();
        }
    }
    
    private BufferedImage getBufferedImage(Blob imageBlob){
        InputStream binaryStream = null;
        BufferedImage b = null;
        try{
            binaryStream = imageBlob.getBinaryStream();
            b = ImageIO.read(binaryStream);
        }catch (SQLException | IOException ex){
            System.err.println("Error getBufferedImage : "+ex);
        }
        return b;
    }
    
    private Blob getBlobImage(BufferedImage bi){
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        Blob blFile = null;
        try{
            ImageIO.write(bi, "png", baos);
            blFile = new javax.sql.rowset.serial.SerialBlob(baos.toByteArray());
        }catch (SQLException | IOException ex){
            System.err.println("Error getBufferedImage : "+ex);
            Logger.getLogger(FormDataDiri.class.getName()).log(Level.SEVERE, null, ex);
        }
        return blFile;
    }
    
    private BufferedImage resizeImage(BufferedImage originalImage,int type){
        BufferedImage resizedImage = new BufferedImage(IMG_WIDTH,IMG_HEIGHT,type);
        Graphics2D g = resizedImage.createGraphics();
        g.drawImage(originalImage, 0,0,IMG_WIDTH,IMG_HEIGHT,null);
        g.dispose();
        return resizedImage;
    }
    
    
    
     private void setEmpty(){
        txtId.setText("");
        txtNama.setText("");
        txtTL.setText("");
        //dpTL.setDate();
        dpTL.setDate(new Date());
        txtAlamat.setText("");
        gJK.clearSelection();
        gSP.clearSelection();
        cbAgama.setSelectedItem("--Pilih--");
        lbGambar.setIcon(null);
    }
     
    private void msgEmpty(){
        if (txtNama.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Nama Kosong");
            txtNama.requestFocus();
        }else if (txtTL.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Tempat Lahir Kosong");
            txtTL.requestFocus();
        }else if (dpTL.getDate().equals("")){
            JOptionPane.showMessageDialog(null, "Tanggal Lahir Kosong");
            dpTL.requestFocus();
        }else if (txtTL.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Alamat Kosong");
            txtAlamat.requestFocus();    
        }else if(cbAgama.getSelectedItem().equals("--Pilih--")){
            JOptionPane.showMessageDialog(null, "Pilih Agama");
            cbAgama.requestFocus();
        }else if(cbAgama.getSelectedItem().equals("")){
            JOptionPane.showMessageDialog(null, "Pilih Agama");
            cbAgama.requestFocus();
        }
        
        
    }
    
    private void setData(String SQL){
        try {
            st = con.createStatement();
            rs = st.executeQuery(SQL);
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID");
            model.addColumn("NAMA");
            model.addColumn("TEMPAT LAHIR");
            model.addColumn("TANGGAL LAHIR");
            model.addColumn("ALAMAT");
            model.addColumn("JENIS KELAMIN");
            model.addColumn("AGAMA");
            model.addColumn("STATUS");
            model.addColumn("FOTO");
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            
            while(rs.next()){
                Object[] data = {
                  rs.getString("id"),
                  rs.getString("nama"),
                  rs.getString("tempat_lahir"),
                  rs.getString("tanggal_lahir"),
                  rs.getString("alamat"),
                  rs.getString("jenis_kelamin"),
                  rs.getString("agama"),
                  rs.getString("status_perkawinan"),
                  rs.getBlob("pasfoto")
                };
                model.addRow(data);
                tabelDataDiri.setModel(model);
            }
        } catch (SQLException e){
            
        }
    }
    
    private void setRB(){
        if (rbL.isSelected()){
            JK = "Laki-Laki";
        } else if (rbP.isSelected()){
            JK = "Perempuan";
        }
        
        if (rbM.isSelected()){
           SP = "Menikah"; 
        } else if (rbBM.isSelected()){
            SP = "Belum Menikah";
        }
    
    }
    
    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void tabelDataDiriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataDiriMouseClicked
        // TODO add your handling code here:
        setEmpty();
        txtId.setText(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 0).toString());
        txtNama.setText(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 1).toString());
        txtTL.setText(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 2).toString());
        //dpTL.setDate(tabelUser.getValueAt(tabelUser.getSelectedRow(), 0).toString());
        dpTL.setDate(getFormattedDate(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 3).toString()));
        txtAlamat.setText(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 4).toString());
        String jk = tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 5).toString();
        cbAgama.setSelectedItem(tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 6).toString());
        String sp = tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 7).toString();
        //Blob blob =(Blob) tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 8);
        bImage = getBufferedImage((Blob) tabelDataDiri.getValueAt(tabelDataDiri.getSelectedRow(), 8));
        lbGambar.setIcon(new ImageIcon(bImage));
        
        if (jk.equalsIgnoreCase("Laki-Laki")){
            rbL.setSelected(true);
        } else if (jk.equalsIgnoreCase("Perempuan")){
            rbP.setSelected(true);
        }
        
        if (sp.equalsIgnoreCase("Menikah")){
            rbM.setSelected(true);
        } else if (sp.equalsIgnoreCase("Belum Menikah")){
            rbBM.setSelected(true);
        }
        

    }//GEN-LAST:event_tabelDataDiriMouseClicked

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
        inputDate = String.valueOf(dateFormat.format(dpTL.getDate()));
        //BufferedImage img = (BufferedImage) lbGambar.getIcon();
        
        Blob inputImage = getBlobImage(bImage);  
        
            if (rbL.isSelected() || rbP.isSelected() && rbM.isSelected() || rbBM.isSelected()) {
                if (txtNama.getText().trim().equals("") || txtTL.getText().trim().equals("") || dpTL.getDate().equals("") || cbAgama.getSelectedItem().equals("") || cbAgama.getSelectedItem().equals("--Pilih--")) {
                    msgEmpty();
                } else {
                    generateID();
                    setRB();
                    String SQL = "INSERT INTO datadiri VALUES ('" + txtId.getText() + "','" + txtNama.getText() + "','" + txtTL.getText() + "','" + inputDate + "','" + txtAlamat.getText() + "','" + JK+ "','" + cbAgama.getSelectedItem() + "','" + SP + "','" + inputImage + "')";
                    st.executeUpdate(SQL);
                    JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
                    setEmpty();
                    setData(MySQL);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Chechklist Pilihan Dengan Benar !!", "EROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        try {
        Blob inputImage = getBlobImage(bImage);  
        inputDate = String.valueOf(dateFormat.format(dpTL.getDate()));
        if (rbL.isSelected() || rbP.isSelected() && rbM.isSelected() || rbBM.isSelected()) {
            if (txtNama.getText().trim().equals("") || txtTL.getText().trim().equals("") || dpTL.getDate().equals("") || cbAgama.getSelectedItem().equals("") || cbAgama.getSelectedItem().equals("--Pilih--")) {
                msgEmpty();
            }else{
                setRB();
                String SQL = "UPDATE datadiri SET nama = '" + txtNama.getText() + "', tempat_lahir = '" + txtTL.getText() +  "',tanggal_lahir='" + inputDate +  "',alamat ='" + txtAlamat.getText()+  "',jenis_kelamin ='" + JK +  "',agama='" + cbAgama.getSelectedItem() + "',status_perkawinan='" + SP + "', pasfoto = '" + inputImage + "' WHERE id = '" + txtId.getText() + "'";
                st.executeUpdate(SQL);
                JOptionPane.showMessageDialog(null, "Data berhasil diubah");
                setEmpty();
                setData(MySQL);
            }
        } else {
                JOptionPane.showMessageDialog(null, "Chechklist Pilihan Dengan Benar !!", "EROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        try{
            if ((txtId.getText().equals(""))){
                JOptionPane.showMessageDialog(null, "Id Kosong Pilih Data Di Tabel");
            }else{
                if (JOptionPane.showConfirmDialog(null, "Yakin Ingin Menghapus Data Dengan ID "+txtId.getText()+"", "Confrim", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)== JOptionPane.YES_OPTION) {
                    try{
                        st = con.createStatement();
                        String sql = "DELETE FROM datadiri WHERE id = '" + txtId.getText() + "'";
                        st.executeUpdate(sql);
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                        setEmpty();
                        setData(MySQL);
                    }catch (Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
        } catch (Exception e){
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        setEmpty();
        setData(MySQL);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        new FormMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
         // TODO add your handling code here:
        try {
            if (txtCari.getText().trim().equalsIgnoreCase("")){
        }else{
                String SQL = "SELECT * from datadiri WHERE id LIKE '%"+txtCari.getText()+"%' OR nama like '%"+txtCari.getText()+"%' OR tempat_lahir like '%"+txtCari.getText()+"%' OR tanggal_lahir like '%"+txtCari.getText()+"%' OR jenis_kelamin like '%"+txtCari.getText()+"%' OR agama like '%"+txtCari.getText()+"%' ";
                setData(SQL);  
        }
        } catch (Exception e) {
            Logger.getLogger(FormDataDiri.class.getName()).log(Level.SEVERE, null, e);
        }
         
    }//GEN-LAST:event_btnCariActionPerformed

    private void txtAlamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlamatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlamatActionPerformed

    private void cbAgamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAgamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAgamaActionPerformed

    private void rbLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbLActionPerformed

    private void rbMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMActionPerformed

    private void rbBMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbBMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbBMActionPerformed

    private void btnPilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihActionPerformed
        // TODO add your handling code here:
        FileFilter filter = new FileNameExtensionFilter("Image Files","jpg","png","gif","jpeg");
        fChooser.setFileFilter(filter);
        BufferedImage img = null;
        try{
            int result = fChooser.showOpenDialog(null);
            if (result == JFileChooser.APPROVE_OPTION){
                File file = fChooser.getSelectedFile();
                img = ImageIO.read(file);
                int type = img.getType() == 0? BufferedImage.TYPE_INT_ARGB : img.getType();
                bImage = resizeImage(img,type);
                lbGambar.setIcon(new ImageIcon(bImage));
            }
        } catch (IOException e){
            System.err.println("Eror Button Pilih : "+e);
                }
        
    }//GEN-LAST:event_btnPilihActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDataDiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDataDiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDataDiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDataDiri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDataDiri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKembali;
    private javax.swing.JButton btnPilih;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cbAgama;
    private org.jdesktop.swingx.JXDatePicker dpTL;
    private javax.swing.JFileChooser fChooser;
    private javax.swing.ButtonGroup gJK;
    private javax.swing.ButtonGroup gSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lbGambar;
    private javax.swing.JRadioButton rbBM;
    private javax.swing.JRadioButton rbL;
    private javax.swing.JRadioButton rbM;
    private javax.swing.JRadioButton rbP;
    private javax.swing.JTable tabelDataDiri;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtTL;
    // End of variables declaration//GEN-END:variables
}
